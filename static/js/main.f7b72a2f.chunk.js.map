{"version":3,"sources":["images/suds.jpg","components/Home.js","components/About.js","Routes.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Home","className","id","About","Routes","exact","path","App","class","activeStyle","color","borderBottom","to","href","target","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,kC,4OCI5B,SAASC,IACtB,OACE,yBAAKC,UAAU,QACb,yBAAKA,UAAU,UACb,wBAAIC,GAAG,SAAP,6BACA,qE,MCLO,SAASC,IACpB,OACI,yBAAKF,UAAU,QACX,yBAAKA,UAAU,UACX,wBAAIC,GAAG,SAAP,sBACA,8TAIJ,6CACA,wBAAIA,GAAG,UACH,6EACA,kHACA,6EAGJ,6CACA,wBAAIA,GAAG,aACH,sCACA,oDACA,qDCpBD,SAASE,IACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,KAChB,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOD,OAAK,EAACC,KAAK,UAChB,kBAAC,EAAD,QC4BOC,MAlCf,WAEE,OACE,yBAAKN,UAAU,OACb,yBAAKC,GAAG,aACN,kBAAC,IAAD,KACE,yBAAKM,MAAM,OACT,6BACE,4BACE,4BAAI,kBAAC,IAAD,CAASH,OAAK,EAACI,YAAa,CAAEC,MAAO,UAAWC,aAAc,qBAAuBC,GAAG,IAAIX,UAAU,QAAtG,SACJ,4BAAI,kBAAC,IAAD,CAASQ,YAAa,CAAEC,MAAO,UAAWC,aAAc,qBAAuBC,GAAG,SAASX,UAAU,SAArG,UACJ,4BAAI,kBAAC,IAAD,CAASQ,YAAa,CAAEC,MAAO,UAAWC,aAAc,qBAAuBC,GAAG,QAAQX,UAAU,QAApG,SACJ,4BAAI,kBAAC,IAAD,CAASQ,YAAa,CAAEC,MAAO,UAAWC,aAAc,qBAAuBC,GAAG,WAAWX,UAAU,WAAvG,eAIV,kBAACG,EAAD,QAGJ,4BAAQF,GAAG,UACT,yBAAKM,MAAM,WACT,yBAAKA,MAAM,QACT,4BACE,wBAAIA,MAAM,QAAO,uBAAGK,KAAK,0DAA0DC,OAAO,UAAS,uBAAGN,MAAM,0BAC5G,wBAAIA,MAAM,QAAO,uBAAGK,KAAK,mCAAmCC,OAAO,UAAS,uBAAGN,MAAM,wBACrF,wBAAIA,MAAM,QAAO,uBAAGK,KAAK,mCAAmCC,OAAO,UAAS,uBAAGN,MAAM,4BClB/EO,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCVNC,IAASC,OACL,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,KACE,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDmHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.f7b72a2f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/suds.e57d9bd6.jpg\";","import React from \"react\";\r\nimport \"./Home.css\";\r\nimport suds from \"../images/suds.jpg\";\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className=\"suds\">\r\n      <div className=\"lander\">\r\n        <h2 id=\"title\">Hi, my name is Sudarshan.</h2>\r\n        <p>Check out my links and resume below!</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport \"./About.css\";\r\nimport suds from \"../images/suds.jpg\";\r\n\r\nexport default function About() {\r\n    return (\r\n        <div className=\"suds\">\r\n            <div className=\"lander\">\r\n                <h2 id=\"title\">Absorb my essence:</h2>\r\n                <p>I am currently pursuing a Master of Science in Electrical Engineering with a focus on machine vision. \r\n                    Mainly, my research focuses on implementing deep learning based road lane detection.  \r\n                    I have been exploring many deep learning algorithms like Spatial CNN and LSTMs.\r\n                    i love tennis balls.</p>\r\n            <h2>Career Goals:</h2>\r\n            <ul id=\"career\">\r\n                <li>Increase professional knowledge and training.</li>\r\n                <li>Attain a leadership role from either running a team or working on a small startup.</li>\r\n                <li>Have new experiences and broaden my network.</li>\r\n            </ul>\r\n \r\n            <h2>My Interests:</h2>\r\n            <ul id=\"interests\">\r\n                <li>Tennis</li>\r\n                <li>Balling w the homies</li>\r\n                <li>Traveling salesman</li>\r\n            </ul>\r\n        </div>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport Home from \"./components/Home\";\r\nimport About from \"./components/About\";\r\nexport default function Routes() {\r\n  return (\r\n    <Switch>\r\n      <Route exact path=\"/\">\r\n        <Home />\r\n      </Route>\r\n      <Route exact path=\"/about\">\r\n        <About />\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}","import './App.css';\r\nimport React, { useState } from 'react';\r\nimport { BrowserRouter as Router, NavLink } from \"react-router-dom\";\r\nimport Routes from \"./Routes\";\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <div id=\"container\">\r\n        <Router>\r\n          <div class=\"nav\">\r\n            <nav>\r\n              <ul>\r\n                <li><NavLink exact activeStyle={{ color: \"#6ADC0B\", borderBottom: \"1px solid #6ADC0B\" }} to=\"/\" className=\"home\">home</NavLink></li>\r\n                <li><NavLink activeStyle={{ color: \"#0175BE\", borderBottom: \"1px solid #0175BE\" }} to=\"/about\" className=\"about\">about</NavLink></li>\r\n                <li><NavLink activeStyle={{ color: \"#F4303C\", borderBottom: \"1px solid #F4303C\" }} to=\"/work\" className=\"work\">work</NavLink></li>\r\n                <li><NavLink activeStyle={{ color: \"#F5EF17\", borderBottom: \"1px solid #F5EF17\" }} to=\"/contact\" className=\"contact\">contact</NavLink></li>\r\n              </ul>\r\n            </nav>\r\n          </div>\r\n          <Routes />\r\n        </Router>\r\n      </div>\r\n      <footer id=\"footer\">\r\n        <div class=\"content\">\r\n          <nav class=\"menu\">\r\n            <ul>\r\n              <li class=\"leaf\"><a href=\"https://www.linkedin.com/in/sudarshan-pillai-00a586119/\" target=\"_blank\"><i class=\"icon fa fa-linkedin\"></i></a></li>\r\n              <li class=\"leaf\"><a href=\"https://github.com/sudarshan0419\" target=\"_blank\"><i class=\"icon fa fa-github\"></i></a></li>\r\n              <li class=\"leaf\"><a href=\"https://github.com/sudarshan0419\" target=\"_blank\"><i class=\"icon fa fa-file\"></i></a></li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </footer>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter as Router } from 'react-router-dom';\r\nimport 'font-awesome/css/font-awesome.min.css';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n      <Router>\r\n        <App />\r\n      </Router>\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n  );\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}